// Copyright (C) 2023  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 23.1std.0 Build 991 11/28/2023 SC Lite Edition"

// DATE "02/18/2025 18:45:42"

// 
// Device: Altera 5CSEMA5F31C6 Package FBGA896
// 

// 
// This Verilog file should be used for Questa Intel FPGA (Verilog) only
// 

`timescale 1 ps/ 1 ps

module lab11_sch (
	c,
	a,
	b,
	m,
	s);
output 	[1:0] c;
input 	a;
input 	[1:0] b;
output 	[1:0] m;
output 	[1:0] s;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \c[1]~output_o ;
wire \c[0]~output_o ;
wire \m[1]~output_o ;
wire \m[0]~output_o ;
wire \s[1]~output_o ;
wire \s[0]~output_o ;
wire \b[0]~input_o ;
wire \a~input_o ;
wire \b[1]~input_o ;
wire \inst3~0_combout ;
wire \inst6~0_combout ;
wire \inst10~combout ;
wire \inst11~combout ;
wire \inst9~0_combout ;
wire \inst12~0_combout ;


cyclonev_io_obuf \c[1]~output (
	.i(!\inst3~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\c[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \c[1]~output .bus_hold = "false";
defparam \c[1]~output .open_drain_output = "false";
defparam \c[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \c[0]~output (
	.i(\inst6~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\c[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \c[0]~output .bus_hold = "false";
defparam \c[0]~output .open_drain_output = "false";
defparam \c[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \m[1]~output (
	.i(\inst10~combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\m[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \m[1]~output .bus_hold = "false";
defparam \m[1]~output .open_drain_output = "false";
defparam \m[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \m[0]~output (
	.i(\inst11~combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\m[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \m[0]~output .bus_hold = "false";
defparam \m[0]~output .open_drain_output = "false";
defparam \m[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s[1]~output (
	.i(\inst9~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[1]~output .bus_hold = "false";
defparam \s[1]~output .open_drain_output = "false";
defparam \s[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s[0]~output (
	.i(\inst12~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[0]~output .bus_hold = "false";
defparam \s[0]~output .open_drain_output = "false";
defparam \s[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \b[0]~input (
	.i(b[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\b[0]~input_o ));
// synopsys translate_off
defparam \b[0]~input .bus_hold = "false";
defparam \b[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \a~input (
	.i(a),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\a~input_o ));
// synopsys translate_off
defparam \a~input .bus_hold = "false";
defparam \a~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \b[1]~input (
	.i(b[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\b[1]~input_o ));
// synopsys translate_off
defparam \b[1]~input .bus_hold = "false";
defparam \b[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \inst3~0 (
// Equation(s):
// \inst3~0_combout  = (!\a~input_o  $ (!\b[1]~input_o )) # (\b[0]~input_o )

	.dataa(!\b[0]~input_o ),
	.datab(!\a~input_o ),
	.datac(!\b[1]~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst3~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst3~0 .extended_lut = "off";
defparam \inst3~0 .lut_mask = 64'h7D7D7D7D7D7D7D7D;
defparam \inst3~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst6~0 (
// Equation(s):
// \inst6~0_combout  = (!\b[0]~input_o  & ((\b[1]~input_o ) # (\a~input_o ))) # (\b[0]~input_o  & (\a~input_o  & \b[1]~input_o ))

	.dataa(!\b[0]~input_o ),
	.datab(!\a~input_o ),
	.datac(!\b[1]~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst6~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst6~0 .extended_lut = "off";
defparam \inst6~0 .lut_mask = 64'h2B2B2B2B2B2B2B2B;
defparam \inst6~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb inst10(
// Equation(s):
// \inst10~combout  = (!\b[0]~input_o ) # ((!\b[1]~input_o ) # (\a~input_o ))

	.dataa(!\b[0]~input_o ),
	.datab(!\a~input_o ),
	.datac(!\b[1]~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst10~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam inst10.extended_lut = "off";
defparam inst10.lut_mask = 64'hFBFBFBFBFBFBFBFB;
defparam inst10.shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb inst11(
// Equation(s):
// \inst11~combout  = ((!\b[1]~input_o ) # (\a~input_o )) # (\b[0]~input_o )

	.dataa(!\b[0]~input_o ),
	.datab(!\a~input_o ),
	.datac(!\b[1]~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst11~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam inst11.extended_lut = "off";
defparam inst11.lut_mask = 64'hF7F7F7F7F7F7F7F7;
defparam inst11.shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst9~0 (
// Equation(s):
// \inst9~0_combout  = (!\b[0]~input_o  & \b[1]~input_o )

	.dataa(!\b[0]~input_o ),
	.datab(!\b[1]~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst9~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst9~0 .extended_lut = "off";
defparam \inst9~0 .lut_mask = 64'h2222222222222222;
defparam \inst9~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst12~0 (
// Equation(s):
// \inst12~0_combout  = (!\b[0]~input_o  & (\a~input_o )) # (\b[0]~input_o  & ((!\a~input_o ) # (!\b[1]~input_o )))

	.dataa(!\b[0]~input_o ),
	.datab(!\a~input_o ),
	.datac(!\b[1]~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst12~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst12~0 .extended_lut = "off";
defparam \inst12~0 .lut_mask = 64'h7676767676767676;
defparam \inst12~0 .shared_arith = "off";
// synopsys translate_on

assign c[1] = \c[1]~output_o ;

assign c[0] = \c[0]~output_o ;

assign m[1] = \m[1]~output_o ;

assign m[0] = \m[0]~output_o ;

assign s[1] = \s[1]~output_o ;

assign s[0] = \s[0]~output_o ;

endmodule
